#!/bin/bash -e

SHADERS_BINARY_DIR=@BINARY_DIR@/shaders

if [ ! -d $SHADERS_BINARY_DIR ]; then
    mkdir -p $SHADERS_BINARY_DIR
fi

SHADERS_TIMESTAMPS_DIR=@BINARY_DIR@/shaders_timestamps
if [ ! -d $SHADERS_TIMESTAMPS_DIR ]; then
    mkdir -p $SHADERS_TIMESTAMPS_DIR
fi

function compile_shader {
    fullfile="$1"
    timestamp_file="$SHADERS_BINARY_DIR/${fullfile##*/}.stamp"
    current_timestamp="$(stat -c %y "$fullfile")"
    shader_out="$SHADERS_BINARY_DIR/${fullfile##*/}.spv"
    if [[ ! -f "$timestamp_file" || "$(< $timestamp_file)" != "$current_timestamp" ]]; then
        stat -c %y "$fullfile" > "$timestamp_file"
        set -x && @GLSLC@ "$1" -o $shader_out
    else
        echo "${shader_out##*/} is up-to-date"
    fi
}

for ext in vert frag; do
    for i in @SHADERS_DIR@/*.$ext; do
        [ -f "$i" ] || break
        compile_shader "$i" &
    done
done

wait
